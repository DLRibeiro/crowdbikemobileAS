import static org.junit.Assert.*;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Iterator;
import java.util.List;

import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONException;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.junit.Before;
import org.junit.Test;
import org.skyscreamer.jsonassert.JSONAssert;

import com.google.gson.Gson;
import com.software.project.entities.Attributes;
import com.software.project.entities.Entity;
import com.software.project.service.adapter.AdapterOcurrence;
import com.software.project.service.adapter.ContextResponses;


public class TestPersistenceEntityWS {

	@Before
	public void setUp() throws Exception {
	}

	/*@Test
	public void createNew() throws JSONException {
		  String result = "";  
			String line = "";
			String id = String.valueOf("358");
		    Entity entity = new Entity();
			List<Attributes> attributes = new ArrayList<Attributes>();
			attributes.add(new Attributes("title", "String", "Ocurrence"));
			attributes.add(new Attributes("lat","String","40.418889"));
			attributes.add(new Attributes("lng","String","-3.691944"));
			attributes.add(new Attributes("endereco", "String", "Endereco de minha casa"));
			attributes.add(new Attributes("dataOcorrencia", "String",AdapterOcurrence.df.format(Calendar.getInstance().getTime()))); 
			attributes.add(new Attributes("userId", "String", "1")); 
			
			entity.setType("Ocurrence");
			entity.setId(id);
			entity.setAttributes(attributes);

			Gson gson;
			String uri = "http://148.6.80.19:1026/v1/contextEntities";
			
			
			int responseCode = 0;

			try {
				HttpClient client = new DefaultHttpClient();
				HttpPost httppost = new HttpPost(uri);
			    httppost.setHeader("Accept", "application/json");
				gson = new Gson();
				StringEntity entityPost = new StringEntity(gson.toJson(entity));
				entityPost.setContentType("application/json");
				
				
				httppost.setEntity(entityPost);

				int executeCount = 0;
				HttpResponse response;
				do {
					executeCount++;
					//Log.v("TENTATIVA", "tentativa n√∫mero:" + executeCount);

					// Execute HTTP Post Request
					response = client.execute(httppost);
					responseCode = response.getStatusLine().getStatusCode();						

				} while (executeCount < 5 && responseCode == 408);

				BufferedReader rd = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));

				while ((line = rd.readLine()) != null){
					result += line.trim();
				}

			      
			} catch (Exception e) {
				responseCode = 408;
				e.printStackTrace();
				fail("Not yet");
			}
			
			
	    String s = "{ \"type\" : \"Position\",\"isPattern\" : \"false\", " +
	    		"\"id\" : \"358972063059834\",\"contextResponses\" : " +
	    		"[{\"attributes\" : [{\"name\" : \"latitude\",\"type\" : " +
	    		"\"String\",\"value\" : \"\"},{\"name\" : \"longitude\"," +
	    		"\"type\" : \"String\",\"value\" : \"\"}],\"statusCode\" : " +
	    		"{\"code\" : \"200\",\"reasonPhrase\" : \"OK\"}}]}";
	    
	    JSONAssert.assertEquals(s, result, false);
	}*/
	
	@Test
	public void getAll() throws JSONException {
		Gson gson;
		String uri = "http://148.6.80.19:1026/v1/contextEntities";
		int responseCode = 0;
		String result = "";  
		String line = "";
		HttpClient client;

		try {
			client = new DefaultHttpClient();
			HttpGet httpget = new HttpGet(uri);
		    httpget.setHeader("Accept", "application/json");		
		    httpget.setHeader("Content-type", "application/json");
		    HttpResponse response;
			BufferedReader rd;

			int executeCount = 0;
			do {
				executeCount++;
				response = client.execute(httpget);
				responseCode = response.getStatusLine().getStatusCode();						
			} while (executeCount < 5 && responseCode == 408);
			      rd = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));
			while ((line = rd.readLine()) != null){
				result += line.trim();
			}	      
		} catch (Exception e) {
			responseCode = 408;
			e.printStackTrace();
		}
	
	   ContextResponses cr = AdapterOcurrence.toContextResponses(result);
		
		// TODO Auto-generated method stub
		cr.getContextElement();
	    
	  //  JSONAssert.assertEquals(s, result, false);
	}
	
	@Test
	public void getById() throws JSONException {
		Gson gson;
		String uri = "http://148.6.80.19:1026/v1/contextEntities/358";
		int responseCode = 0;
		String result = "";  
		String line = "";
		HttpClient client;

		try {
			client = new DefaultHttpClient();
			HttpGet httpget = new HttpGet(uri);
		    httpget.setHeader("Accept", "application/json");		
		    httpget.setHeader("Content-type", "application/json");
		    HttpResponse response;
			BufferedReader rd;

			int executeCount = 0;
			do {
				executeCount++;
				response = client.execute(httpget);
				responseCode = response.getStatusLine().getStatusCode();						
			} while (executeCount < 5 && responseCode == 408);
			      rd = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));
			while ((line = rd.readLine()) != null){
				result += line.trim();
			}	      
		} catch (Exception e) {
			responseCode = 408;
			e.printStackTrace();
		}
	
		try {
		JSONParser jsonParser = new JSONParser();
		JSONObject jsonObject = (JSONObject) jsonParser.parse(result);
		// get a String from the JSON object
		String firstName = (String) jsonObject.get("firstname");
		System.out.println("The first name is: " + firstName);
		// get a number from the JSON object
		long id = (long) jsonObject.get("id");
		System.out.println("The id is: " + id);
		// get an array from the JSON object
		JSONArray lang = (JSONArray) jsonObject.get("languages");
		// take the elements of the json array
		for (int i = 0; i < lang.size(); i++) {
			System.out.println("The " + i + " element of the array: "
					+ lang.get(i));
		}
		Iterator i = lang.iterator();
		// take each value from the json array separately
		while (i.hasNext()) {
			JSONObject innerObj = (JSONObject) i.next();
			System.out.println("language " + innerObj.get("lang") +
			" with level " + innerObj.get("knowledge"));
		}

		// handle a structure into the json object

		JSONObject structure = (JSONObject) jsonObject.get("job");
		System.out.println("Into job structure, name: "	+ structure.get("name"));

	} catch (Exception ex) {
		ex.printStackTrace();
	}

	

	  //  JSONAssert.assertEquals(s, result, false);
	}

}
