
import java.io.IOException;
import java.io.InputStreamReader;

import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;

import com.google.gson.Gson;
import com.google.gson.JsonIOException;
import com.google.gson.JsonSyntaxException;
import com.software.project.entities.MsgResponse;
public class TesteRestService {

	public static void main(String[] args) throws JsonIOException, JsonSyntaxException, IOException {


		Gson g  = new Gson();
			DefaultHttpClient client = new DefaultHttpClient();
			HttpGet httpget = new HttpGet("http://localhost:8080/project/rest/trace/12345/-8.061418929323795/-34.87228989601135/");
			// HttpGet httpget = new
			// HttpGet(WS_URL_GET+"/"+e.getId()+"/"+e.getLatitude()+"/"+e.getLongitude()+"/");
			HttpResponse response;
			response = client.execute(httpget);
			// eventoFromService = mGson.fromJson(new
			// InputStreamReader(response.getEntity().getContent()), listType);
			MsgResponse msg = g.fromJson(new InputStreamReader(response.getEntity().getContent()),MsgResponse.class);
			double d = 1000 * Double.valueOf(msg.getDistance());
			System.out.println("Distancia: " + d);	
					 // Prepare the request 
				 /*   Client client = new Client( new Context(), Protocol.HTTP );
					ClientResource resource = new ClientResource("http://localhost:8080/project/rest/trace/1/-8.07046316100618/-34.9147224426269/"); 
					resource.setNext(client);
						    
					// Send the HTTP GET request
					resource.get();  
					if (resource.getStatus().isSuccess()) {  
					// Output the response entity on the JVM console  
					resource.getResponseEntity().write(System.out);  
			
					} else if (resource.getStatus().equals(Status.CLIENT_ERROR_UNAUTHORIZED)) {  
					// Unauthorized access  
					System.out.println("Access authorized by the server, check your credentials");  
					} else {  
					// Unexpected status
					System.out.println("An unexpected status was returned: "+ resource.getStatus());  
				    }  					*/

	}

}
